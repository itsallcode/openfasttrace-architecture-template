<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.itsallcode</groupId>
  <artifactId>openfasttrace-architecture-template</artifactId>
  <version>0.1.0</version>
  <scm>
    <url>https://github.com/itsallcode/openfasttrace-architecture-template.git</url>
    <developerConnection>itsallcode.org</developerConnection>
  </scm>
  <issueManagement>
    <url>https://github.com/itsallcode/openfasttrace-architecture-template/issues</url>
  </issueManagement>
  <url>https://github.com/itsallcode/openfasttrace</url>
  <name>OpenFastTrace Architecture Template</name>
  <description>Free software requirement tracing suite</description>
  <properties>
    <spec.name>AutoYummiBox - Software Architectural Design</spec.name>
    <spec.filename>SwAD-AutoYummiBox</spec.filename>
    <spec.version>1.0.0</spec.version>
    <spec.files>architecture.md introduction.md context.md
      solution_strategy.md building_block_view.md
      building_block_view/MachineApplication.md runtime_view.md
      runtime_view/ordering_dishes.md runtime_view/preparing_dishes.md
      runtime_view/paying_with_credit_card.md deployment_view.md concepts.md
      design_decisions.md quality_scenarios.md risks.md glossary.md
      bibliography.md</spec.files>
    <!-- Do not change the properties below -->
    <spec.source.directory>${project.basedir}/doc</spec.source.directory>
    <spec.source.css.directory>${spec.source.directory}/css</spec.source.css.directory>
    <spec.model.directory>${project.basedir}/uml</spec.model.directory>
    <spec.build.html.directory>${project.build.directory}</spec.build.html.directory>
    <spec.build.uml.directory>${project.build.directory}/uml</spec.build.uml.directory>
    <spec.build.css.directory>${project.build.directory}/css</spec.build.css.directory>
    <lua.source.directory>${project.basedir}/src/main/lua</lua.source.directory>
  </properties>
  <build>
    <plugins>
      <plugin>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>copy-resources</id>
            <phase>process-resources</phase>
            <goals>
              <goal>copy-resources</goal>
            </goals>
            <configuration>
              <outputDirectory>${spec.build.css.directory}</outputDirectory>
              <resources>
                <resource>
                  <directory>${spec.source.css.directory}</directory>
                  <filtering>true</filtering>
                </resource>
              </resources>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.github.jeluard</groupId>
        <artifactId>plantuml-maven-plugin</artifactId>
        <version>1.2</version>
        <executions>
          <execution>
            <id>plantuml</id>
            <phase>process-resources</phase>
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <sourceFiles>
            <directory>${spec.model.directory}/diagrams</directory>
            <includes>
              <include>**/*.plantuml</include>
            </includes>
          </sourceFiles>
          <format>svg</format>
          <outputDirectory>${spec.build.uml.directory}</outputDirectory>
        </configuration>
        <dependencies>
          <dependency>
            <groupId>net.sourceforge.plantuml</groupId>
            <artifactId>plantuml</artifactId>
            <version>1.2018.8</version>
          </dependency>
        </dependencies>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.6.0</version>
        <executions>
          <execution>
            <id>pandoc</id>
            <phase>compile</phase>
            <configuration>
              <executable>pandoc</executable>
              <workingDirectory>${spec.source.directory}</workingDirectory>
              <commandlineArgs>--from=markdown --to=html5
                --standalone
                --toc
                --number-sections
                --css=${spec.source.css.directory}/spec.css
                --lua-filter=${lua.source.directory}/link_converter.lua
                --strip-comments
                --output=${spec.build.html.directory}/${spec.filename}.html
                ${spec.files}</commandlineArgs>
            </configuration>
            <goals>
              <goal>exec</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- See http://www.mojohaus.org/license-maven-plugin/examples/example-add-license.html -->
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>1.16</version>
        <configuration>
          <verbose>false</verbose>
          <detail>true</detail>
          <licenseName>cc-by-sa-4.0</licenseName>
          <licenseResolver>${project.baseUri}/src/license</licenseResolver>
          <organizationName>itsallcode.org</organizationName>
          <inceptionYear>2018</inceptionYear>
          <excludes>
          </excludes>
          <failOnMissingHeader>true</failOnMissingHeader>
          <failIfWarning>true</failIfWarning>
          <failOnNotUptodateHeader>true</failOnNotUptodateHeader>
          <encoding>UTF-8</encoding>
          <dryRun>false</dryRun>
          <extraExtensions>
            <md>xml</md>
            <markdown>xml</markdown>
          </extraExtensions>
          <roots>
            <root>${spec.source.directory}</root>
          </roots>
          <includes>
            <include>**/*.md</include>
            <include>**/*.markdown</include>
          </includes>
        </configuration>
        <executions>
          <execution>
            <id>check-file-header</id>
            <goals>
              <goal>check-file-header</goal>
            </goals>
            <phase>validate</phase>
          </execution>
          <execution>
            <id>first</id>
            <goals>
              <goal>update-file-header</goal>
            </goals>
            <phase>process-sources</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
</project>